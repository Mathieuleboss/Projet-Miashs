import numpy as np
import matplotlib.pyplot as plt

def generate_forest_map(height_map, temperature_map):
    forest_map = np.zeros_like(height_map)
    for x in range(height_map.shape[0]):
        for y in range(height_map.shape[1]):
            if np.random.rand() < 0.1:  # Probabilité de source de forêt augmentée
                if height_map[x, y] > 0.3 and temperature_map[x, y] > 0.2:  # Conditions climatiques favorables assouplies
                    forest_map[x, y] = 1
                    grow_forest(forest_map, x, y)
    return forest_map

def grow_forest(forest_map, x, y, depth=0, max_depth=5):
    if depth >= max_depth:
        return

    if 0 <= x < forest_map.shape[0] and 0 <= y < forest_map.shape[1]:
        if np.random.rand() < 0.5:  # Probabilité de croissance
            forest_map[x, y] = 1
            grow_forest(forest_map, x + 1, y, depth + 1)
            grow_forest(forest_map, x - 1, y, depth + 1)
            grow_forest(forest_map, x, y + 1, depth + 1)
            grow_forest(forest_map, x, y - 1, depth + 1)

def generate_height_map(size):
    return np.random.rand(size, size)

def generate_temperature_map(size):
    return np.random.rand(size, size)

def generate_desert_map(height_map, temperature_map):
    desert_map = np.zeros_like(height_map)
    for x in range(height_map.shape[0]):
        for y in range(height_map.shape[1]):
            if np.random.rand() < 0.1:  # Probabilité de source de désert augmentée
                if height_map[x, y] < 0.4 and temperature_map[x, y] > 0.7:  # Conditions climatiques favorables assouplies
                    desert_map[x, y] = 1
                    grow_desert(desert_map, x, y)
    return desert_map

def grow_desert(desert_map, x, y, depth=0, max_depth=5):
    if depth >= max_depth:
        return

    if 0 <= x < desert_map.shape[0] and 0 <= y < desert_map.shape[1]:
        if np.random.rand() < 0.5:  # Probabilité de croissance
            desert_map[x, y] = 1
            if np.random.rand() < 0.2:  # Probabilité de roche
                desert_map[x, y] = 2
            grow_desert(desert_map, x + 1, y, depth + 1)
            grow_desert(desert_map, x - 1, y, depth + 1)
            grow_desert(desert_map, x, y + 1, depth + 1)
            grow_desert(desert_map, x, y - 1, depth + 1)

def generate_landscape(size):
    height_map = generate_height_map(size)
    temperature_map = generate_temperature_map(size)
    desert_map = generate_desert_map(height_map, temperature_map)
    forest_map = generate_forest_map(height_map, temperature_map)
    return desert_map, forest_map

landscape, forest = generate_landscape(100)

fig, ax = plt.subplots(figsize=(10, 10))

# Afficher la carte du désert en premier avec une transparence de 0.5
ax.imshow(landscape, cmap='hot', vmin=0, vmax=2, alpha=0.5)
# Afficher la carte de la forêt par-dessus avec une transparence de 0.5
ax.imshow(forest, cmap='Greens', vmin=0, vmax=1, alpha=0.5)

ax.set_title('Combined Landscape and Forest')

plt.show()
