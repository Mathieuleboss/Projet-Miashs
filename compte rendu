    Le projet de génération de carte consiste à créer une carte en deux dimensions avec différents types de terrain, tels que des océans, des montagnes, des déserts et des fôrets.
Pour se faire, nous avons exclusivement travaillé en langage Python pour sa simplicité dans l'affichage de graphiques. Mais également avec l'aide de L'I.A mistral sans laquelle nous serions passé à côté de précieux conseils autant pratiques que théoriques.

Une fois notre sujet connu, nous lui avons demandé en premier lieu d'élaborer un plan afin de mener à bien le projet. Plan que nous avons suivis pour mener à bien la réalisation de ce projet.
Suite à cela l'I.A nous a suggéré certaines pratiques, telle que l'utilisation des bibliothèques suivantes : Numpy, Perlin Noise, Matplotlib.
Après avoir intégré ces conseils, nous nous sommes dirigé, suite aux suggestions de Monsieur Delbot et de l'I.A, vers l'utilisation des algorithmes du bruit de Perlin.
En effet ces algorithmes sont fréquemment utilisés en langage Python pour créer des environnements réalistes.
Bien que l'utilisation de la bibliothèque "noise" soit la plus optimale en langage Python pour implémenter le bruit de Perlin, nous avons rapidement mis de côté l'intégration de cette bibliothèque dans notre programme.
Cela faisait suite à des problèmes de disponibilité de cette bibliothèque sur les logiciels que nous avons utilisé pour programmer sur Python (Jupyter et Spyder). 
Suite à cette adaptation, nous avons alors suggérer à l'I.A. de nous élaborer un des ces algorithmes de Perlin en utlisant la bibliothèque numpy du language Python, comme il nous l'a été indiqué dans la consigne.

Après cela, nous pensions être complètement au point sur la forme que nous pourrions donner à notre programme. Cependant, après les premières tentatives d'utilisation du bruit de Perlin, le rendu n'était pas à la hauteur de nos attentes.
Un des problèmes auxquels nous étions confrontés était notamment la non-apparition des lacs sur notre carte après exécution du programme, malgré la présence d'une fonction générative de lac dans notre programme.
De plus, nous n'étions pas au point avec la maniement des couleurs affichées après exécution. Ces couleurs étant la façon de distinguer les différents types de terrains sensés être présents sur notre carte, le problème était donc de taille.
C'est pourquoi, parallèlement à notre programme incluant les algorithmes du bruit de Perlin, nous nous sommes essayé à un autre type de programme incluant les bibliothèques Matplotlib et Numpy et excluant l'algorithme de Perlin.
A première vu ce nouveau programme nous semblait optimal car il affichait des couleurs bien plus vives et clairement séparées les unes des autres sur les carte obtenues après exécution, chaque carte représentant un type de terrain différent.
Cependant nous avons vite mis de côté cette option car la superposition des différents types de terrain s'est avérée être bien plus complexe qu'avec l'utilisation des algorithmes de Perlin.

avec l'aide de l'I.A., dans la limite de nos capacités en informatique, rendu le résultat plus conforme par rapport au projet.

